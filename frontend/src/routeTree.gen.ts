/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthenticatedIndexImport } from './routes/_authenticated/index'
import { Route as AuthenticatedProfileImport } from './routes/_authenticated/profile'
import { Route as AuthenticatedNodePageImport } from './routes/_authenticated/nodePage'
import { Route as AuthenticatedUuidImport } from './routes/_authenticated/$uuid'

// Create/Update Routes

const AuthenticatedIndexRoute = AuthenticatedIndexImport.update({
  id: '/_authenticated/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedProfileRoute = AuthenticatedProfileImport.update({
  id: '/_authenticated/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedNodePageRoute = AuthenticatedNodePageImport.update({
  id: '/_authenticated/nodePage',
  path: '/nodePage',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedUuidRoute = AuthenticatedUuidImport.update({
  id: '/_authenticated/$uuid',
  path: '/$uuid',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated/$uuid': {
      id: '/_authenticated/$uuid'
      path: '/$uuid'
      fullPath: '/$uuid'
      preLoaderRoute: typeof AuthenticatedUuidImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/nodePage': {
      id: '/_authenticated/nodePage'
      path: '/nodePage'
      fullPath: '/nodePage'
      preLoaderRoute: typeof AuthenticatedNodePageImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/profile': {
      id: '/_authenticated/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthenticatedProfileImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/$uuid': typeof AuthenticatedUuidRoute
  '/nodePage': typeof AuthenticatedNodePageRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/': typeof AuthenticatedIndexRoute
}

export interface FileRoutesByTo {
  '/$uuid': typeof AuthenticatedUuidRoute
  '/nodePage': typeof AuthenticatedNodePageRoute
  '/profile': typeof AuthenticatedProfileRoute
  '/': typeof AuthenticatedIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_authenticated/$uuid': typeof AuthenticatedUuidRoute
  '/_authenticated/nodePage': typeof AuthenticatedNodePageRoute
  '/_authenticated/profile': typeof AuthenticatedProfileRoute
  '/_authenticated/': typeof AuthenticatedIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/$uuid' | '/nodePage' | '/profile' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/$uuid' | '/nodePage' | '/profile' | '/'
  id:
    | '__root__'
    | '/_authenticated/$uuid'
    | '/_authenticated/nodePage'
    | '/_authenticated/profile'
    | '/_authenticated/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthenticatedUuidRoute: typeof AuthenticatedUuidRoute
  AuthenticatedNodePageRoute: typeof AuthenticatedNodePageRoute
  AuthenticatedProfileRoute: typeof AuthenticatedProfileRoute
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedUuidRoute: AuthenticatedUuidRoute,
  AuthenticatedNodePageRoute: AuthenticatedNodePageRoute,
  AuthenticatedProfileRoute: AuthenticatedProfileRoute,
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_authenticated/$uuid",
        "/_authenticated/nodePage",
        "/_authenticated/profile",
        "/_authenticated/"
      ]
    },
    "/_authenticated/$uuid": {
      "filePath": "_authenticated/$uuid.tsx"
    },
    "/_authenticated/nodePage": {
      "filePath": "_authenticated/nodePage.tsx"
    },
    "/_authenticated/profile": {
      "filePath": "_authenticated/profile.tsx"
    },
    "/_authenticated/": {
      "filePath": "_authenticated/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
